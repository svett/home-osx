#!/bin/bash

[ -z "$DEBUG" ] || set -x

OS_NAME=$(uname | awk '{print tolower($0)}')

main() {
  setup_os

  configure_git

  install_ruby
  install_python
  install_node
  install_rust

  update_golang_packages
  update_vim_plugins
  update_tmux_plugins
}


setup_os() {
  if [[ "$SHELL" != "/bin/bash" ]]; then
    chsh -s /bin/bash
  fi

  "$HOME/bin/setup-$OS_NAME"
}

configure_git() {
  echo "Ensuring git configs are set up..."
  local gitconfig

  if [[ ! -f "${HOME}/.gitconfig" ]] ; then
    write_git_config
  fi

  if [[ $(head -n2 "${HOME}/.gitconfig") != "[include]
  path = ${HOME}/.gitconfigrc" ]] ; then
    gitconfig=$(cat "${HOME}/.gitconfig")
    write_git_config
    echo "${gitconfig}" >> "${HOME}/.gitconfig"
  fi
}

write_git_config() {
  echo "[include]" > "${HOME}/.gitconfig"
  echo "  path = ${HOME}/.gitconfigrc" >> "${HOME}/.gitconfig"
}


install_ruby() {
  echo "Setting up ruby..."

  gem install bundler --conservative
  gem install neovim --conservative
  gem install pry --conservative
  gem install rspec --conservative
  gem install apiaryio --conservative
  gem install tmuxinator --conservative
  gem install guard --conservative
  gem install guard-shell --conservative
}

install_python() {
  echo "Setting packages for python"

  pip install --upgrade -r "$HOME/etc/python/system-dependencies"

  install_python_for_vim
}

install_python_for_vim() {
  echo "Setting up Python v3 for Vim"

  python3 -m venv "$HOME/.vim/python/v3"

   # shellcheck disable=SC1090
  source "$HOME/.vim/python/v3/bin/activate"

  pip3 install --upgrade -r "$HOME/etc/python/vim-dependencies"
}

npm_install() {
  if ! [ -x "$(npm list "$1" 2>&1>/dev/null)" ]; then
    npm update -g "$1"
  else
    npm install -g "$1"
  fi
}

install_node() {
  # shellcheck disable=SC1090
  source "$HOME/etc/profile.d/node"

  NODE_VERSION="11.10.0"

  nvm install "$NODE_VERSION"

  npm_install yarn
  npm_install typescript
  npm_install jest-cli
  npm_install create-react-app
  npm_install livedown
}

install_rust() {
  export PATH="$HOME/.cargo/bin:$PATH"

  if rustup component list | grep -q rust-src; then
    rustup component add rust-src
  fi

  if ! [ -x "$(command -v racer)" ]; then
    cargo install --version 2.0.13 racer
  fi

  if ! [ -x "$(command -v diesel)" ]; then
    cargo install diesel_cli --no-default-features --features "postgres sqlite"
  fi
}

update_vim_plugins() {
  nvim +PluginInstall +qall
  nvim +GoUpdateBinaries +qall
}

update_tmux_plugins() {
  # shellcheck disable=SC1091
  # shellcheck source=${HOME}/.tmux/plugins/tpm/bin/install_plugins
  . "${HOME}/.tmux/plugins/tpm/bin/install_plugins" || true
  # shellcheck disable=SC1091
  # shellcheck source=${HOME}/.tmux/plugins/tpm/bin/update_plugins
  . "${HOME}/.tmux/plugins/tpm/bin/update_plugins" all || true
}

update_golang_packages() {
  export GO111MODULE=off
  export GOPATH="${GOPATH:-"${HOME}/go"}"

  cd "${HOME}/go/packages" || return

  for pkg in *
  do
   go get "${pkg//\~//}"
  done
}

main
